import LU
import Generate
import numpy as np

np.set_printoptions(suppress = True)
matrix, b = Generate.Generate(6)
#matrix  = np.array([[2,7,-6],[8,2,1],[7,4,2]], dtype=float)
#b = np.array([1,2,3], dtype=float)
print(" matrix:")
print(matrix)
print(" b:")
print(b)
luMatrix = LU.LU(matrix, b)
LU = np.dot(np.tril(luMatrix.C,-1) + np.eye(len(luMatrix.C)), np.triu(luMatrix.C))
print("\n show: ")
luMatrix.show()
print("\n solve: ")
print(luMatrix.solve())
print(" numpy.linalg.solve: ")
print(np.linalg.solve(matrix, luMatrix.b))
print("\n det: ")
print(luMatrix.det())
print("\n L*U:")
print(np.dot(np.tril(luMatrix.C,-1)+np.eye(len(luMatrix.C)), np.triu(luMatrix.C)))
print("\n P*A:")
print(np.dot(luMatrix.P, matrix))
print("\n inverse: ")
print(luMatrix.inverse())
print(" numpy.linalg.inv: ")
print(np.linalg.inv(matrix))
print("\n A*A^(-1): ")
print(np.dot(matrix, luMatrix.inverse()))
print("\n cond: ")
print(luMatrix.cond())
